<Activity mc:Ignorable="sap sap2010" x:Class="Main" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:ss="clr-namespace:System.Security;assembly=mscorlib" xmlns:uaa="clr-namespace:UiPath.AmazonWebServices.Activities;assembly=UiPath.AmazonWebServices.Activities" xmlns:uaaei="clr-namespace:UiPath.AmazonWebServices.Activities.Ec2.Instances;assembly=UiPath.AmazonWebServices.Activities" xmlns:uac="clr-namespace:UiPath.AmazonWebServices.Core;assembly=UiPath.AmazonWebServices" xmlns:uam="clr-namespace:UiPath.AmazonWebServices.Models;assembly=UiPath.AmazonWebServices" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="VM_Name" Type="InArgument(x:String)" />
    <x:Property Name="Action_StartStopDeallocateDelete" Type="InArgument(x:String)" />
    <x:Property Name="Token" Type="InArgument(x:String)" />
    <x:Property Name="TenantLogicalName" Type="InArgument(x:String)" />
    <x:Property Name="TenantService" Type="InArgument(x:String)" />
    <x:Property Name="Url" Type="InArgument(x:String)" />
    <x:Property Name="clientOrchestratorIsOnprem" Type="InArgument(x:Boolean)" />
    <x:Property Name="FolderId" Type="InArgument(x:String)" />
    <x:Property Name="clientEnvironmentLevelCounters" Type="InArgument(x:Boolean)" />
    <x:Property Name="clientEnvironmentReleases" Type="InArgument(scg:List(x:String))" />
    <x:Property sap2010:Annotation.AnnotationText="can have duplicates for high density robots" Name="specificRobotsMachines" Type="OutArgument(scg:List(x:String))" />
    <x:Property sap2010:Annotation.AnnotationText="can have duplicates for high density robots" Name="unattendedRobotsMachines" Type="InArgument(scg:List(x:String))" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>1774.4,2258.4</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>ActivityBuilder_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="56">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>UiPath.Azure.Models</x:String>
      <x:String>System.Net</x:String>
      <x:String>System.Security</x:String>
      <x:String>UiPath.AmazonWebServices.Models</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>UiPath.AmazonWebServices.Activities</x:String>
      <x:String>UiPath.AmazonWebServices.Activities.Ec2.Instances</x:String>
      <x:String>UiPath.Azure.Activities</x:String>
      <x:String>Amazon.EC2</x:String>
      <x:String>Amazon.Runtime</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="50">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Azure</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.Security.SecureString</AssemblyReference>
      <AssemblyReference>UiPath.AmazonWebServices</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.AmazonWebServices.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Azure.Activities</AssemblyReference>
      <AssemblyReference>AWSSDK.EC2</AssemblyReference>
      <AssemblyReference>AWSSDK.Core</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="Main Sequence" sap:VirtualizedContainerService.HintSize="1784.8,2053.6" sap2010:WorkflowViewState.IdRef="Sequence_3">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:String" Name="Azure_TenantId" />
      <Variable x:TypeArguments="x:String" Name="Azure_ClientId" />
      <Variable x:TypeArguments="x:String" Name="Azure_ClientSecret" />
      <Variable x:TypeArguments="x:String" Name="Azure_SubscriptionID" />
      <Variable x:TypeArguments="ss:SecureString" Name="azure_clientsecret_secure" />
      <Variable x:TypeArguments="ss:SecureString" Name="azure_clientid_secure" />
      <Variable x:TypeArguments="ss:SecureString" Name="azure_tenantid_secure" />
      <Variable x:TypeArguments="ss:SecureString" Name="awsSecretAccessKey" />
      <Variable x:TypeArguments="x:String" Name="awsRegion" />
      <Variable x:TypeArguments="x:String" Name="awsAccessKeyID" />
      <Variable x:TypeArguments="uam:AWSEc2Instance" Name="VM_Object" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <Sequence DisplayName="Get AWS Credentials from Assets Sequence" sap:VirtualizedContainerService.HintSize="1743.2,68.8" sap2010:WorkflowViewState.IdRef="Sequence_1">
      <Sequence.Variables>
        <Variable x:TypeArguments="ss:SecureString" Name="awsID_ss" />
      </Sequence.Variables>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="333.6,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Info" Message="[&quot;Getting AWS credentials from Assets..&quot;]" />
      <ui:GetRobotCredential TimeoutMS="{x:Null}" Username="{x:Null}" AssetName="AmazonAWS_AccessKeyID" DisplayName="Get AWS Access ID" sap:VirtualizedContainerService.HintSize="333.6,22.4" sap2010:WorkflowViewState.IdRef="GetRobotCredential_1" Password="[awsID_ss]" />
      <ui:GetRobotCredential TimeoutMS="{x:Null}" Username="{x:Null}" AssetName="AmazonAWS_SecretAccessKey" DisplayName="Get AWS Access Secret" sap:VirtualizedContainerService.HintSize="333.6,22.4" sap2010:WorkflowViewState.IdRef="GetRobotCredential_2" Password="[awsSecretAccessKey]" />
      <ui:GetRobotAsset TimeoutMS="{x:Null}" AssetName="AmazonAWS_Region" DisplayName="Get AWS Region" sap:VirtualizedContainerService.HintSize="333.6,22.4" sap2010:WorkflowViewState.IdRef="GetRobotAsset_1">
        <ui:GetRobotAsset.Value>
          <OutArgument x:TypeArguments="x:String">[awsRegion]</OutArgument>
        </ui:GetRobotAsset.Value>
      </ui:GetRobotAsset>
      <Assign sap:VirtualizedContainerService.HintSize="333.6,60" sap2010:WorkflowViewState.IdRef="Assign_1">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[awsAccessKeyID]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[(new System.Net.NetworkCredential("",awsID_ss)).Password]</InArgument>
        </Assign.Value>
      </Assign>
    </Sequence>
    <uaa:AWSScope IAMRole="{x:Null}" AccessKeyId="[awsAccessKeyID]" DisplayName="AWS Scope" sap:VirtualizedContainerService.HintSize="1743.2,1852" sap2010:WorkflowViewState.IdRef="AWSScope_1" Region="[awsRegion]" SecretAccessKey="[awsSecretAccessKey]">
      <uaa:AWSScope.Body>
        <ActivityAction x:TypeArguments="uac:AWSCmd">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="uac:AWSCmd" Name="AmazonWebServicesScopePropertyTag" />
          </ActivityAction.Argument>
          <Sequence DisplayName="AWS Do Sequence" sap:VirtualizedContainerService.HintSize="1709.6,1765.6" sap2010:WorkflowViewState.IdRef="Sequence_20">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <TryCatch DisplayName="Get VM Instance Try Catch" sap:VirtualizedContainerService.HintSize="1668,52.8" sap2010:WorkflowViewState.IdRef="TryCatch_3">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <TryCatch.Try>
                <Sequence sap:VirtualizedContainerService.HintSize="304,215.2" sap2010:WorkflowViewState.IdRef="Sequence_19">
                  <Sequence.Variables>
                    <Variable x:TypeArguments="uam:AWSEc2Instance[]" Name="VMs" />
                  </Sequence.Variables>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <uaaei:AWSGetInstanceList AvailablityZone="{x:Null}" Timeout="{x:Null}" DisplayName="Get Instance List" sap:VirtualizedContainerService.HintSize="262.4,22.4" sap2010:WorkflowViewState.IdRef="AWSGetInstanceList_1" InstanceList="[VMs]" State="All" TagKey="Name" TagValue="[VM_Name]" />
                  <Assign sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_2">
                    <Assign.To>
                      <OutArgument x:TypeArguments="uam:AWSEc2Instance">[VM_Object]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="uam:AWSEc2Instance">[VMs(0)]</InArgument>
                    </Assign.Value>
                  </Assign>
                </Sequence>
              </TryCatch.Try>
              <TryCatch.Catches>
                <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="403.2,22.4" sap2010:WorkflowViewState.IdRef="Catch`1_4">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ActivityAction x:TypeArguments="s:Exception">
                    <ActivityAction.Argument>
                      <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                    </ActivityAction.Argument>
                  </ActivityAction>
                </Catch>
              </TryCatch.Catches>
            </TryCatch>
            <If Condition="[VM_Object IsNot Nothing]" DisplayName="If VM found" sap:VirtualizedContainerService.HintSize="1668,1580" sap2010:WorkflowViewState.IdRef="If_4">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <If.Then>
                <Sequence sap:VirtualizedContainerService.HintSize="1290.4,1430.4" sap2010:WorkflowViewState.IdRef="Sequence_21">
                  <Sequence.Variables>
                    <Variable x:TypeArguments="x:Int32" Name="pendingJobsNow" />
                  </Sequence.Variables>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke OrchestratorTenant_GetPendingJobs workflow" sap:VirtualizedContainerService.HintSize="1248.8,88" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_1" UnSafe="False" WorkflowFileName="OrchestratorTenant_GetPendingJobs.xaml">
                    <ui:InvokeWorkflowFile.Arguments>
                      <InArgument x:TypeArguments="x:String" x:Key="Token">[Token]</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="TenantLogicalName">[TenantLogicalName]</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="TenantService">[TenantService]</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="Url">[Url]</InArgument>
                      <InArgument x:TypeArguments="x:Boolean" x:Key="clientOrchestratorIsOnprem">[clientOrchestratorIsOnprem]</InArgument>
                      <OutArgument x:TypeArguments="x:Int32" x:Key="PendingJobsCount">[pendingJobsNow]</OutArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="FolderId">[FolderId]</InArgument>
                      <InArgument x:TypeArguments="x:Boolean" x:Key="clientEnvironmentLevelCounters">[clientEnvironmentLevelCounters]</InArgument>
                      <InArgument x:TypeArguments="scg:List(x:String)" x:Key="clientEnvironmentReleases">[clientEnvironmentReleases]</InArgument>
                      <OutArgument x:TypeArguments="scg:List(x:String)" x:Key="specificRobotsMachines" />
                      <InArgument x:TypeArguments="scg:List(x:String)" x:Key="unattendedRobotsMachines">[unattendedRobotsMachines]</InArgument>
                    </ui:InvokeWorkflowFile.Arguments>
                  </ui:InvokeWorkflowFile>
                  <TryCatch DisplayName="VM Operation - Try Catch" sap:VirtualizedContainerService.HintSize="1248.8,1209.6" sap2010:WorkflowViewState.IdRef="TryCatch_4">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <TryCatch.Try>
                      <Switch x:TypeArguments="x:String" DisplayName="Switch" Expression="[Action_StartStopDeallocateDelete]" sap:VirtualizedContainerService.HintSize="1212,978.4" sap2010:WorkflowViewState.IdRef="Switch`1_2">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <If x:Key="start" Condition="[VM_Object.State IsNot Amazon.EC2.InstanceStateName.Running And  VM_Object.State IsNot Amazon.EC2.InstanceStateName.Pending]" DisplayName="If not already started" sap:VirtualizedContainerService.HintSize="1130.4,547.2" sap2010:WorkflowViewState.IdRef="If_6">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <If.Then>
                            <If Condition="[pendingJobsNow &gt; 0]" DisplayName="If any PendingJobsNow" sap:VirtualizedContainerService.HintSize="752.8,397.6" sap2010:WorkflowViewState.IdRef="If_5">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <If.Then>
                                <Sequence sap:VirtualizedContainerService.HintSize="375.2,248" sap2010:WorkflowViewState.IdRef="Sequence_22">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <uaaei:AWSStartInstance Timeout="{x:Null}" DisplayName="Start Instance" sap:VirtualizedContainerService.HintSize="333.6,22.4" sap2010:WorkflowViewState.IdRef="AWSStartInstance_1" Instance="[VM_Object]" WaitForCompletion="False" />
                                  <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="333.6,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_8" Level="Info" Message="[&quot;VM  &quot;+VM_Object.Name + &quot;  started.&quot;]" />
                                </Sequence>
                              </If.Then>
                              <If.Else>
                                <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="333.6,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_9" Level="Info" Message="[&quot;Skipped VM  &quot;+VM_Object.Name + &quot;  start: pendingJobsNow is 0&quot;]" />
                              </If.Else>
                            </If>
                          </If.Then>
                          <If.Else>
                            <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="333.6,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_10" Level="Info" Message="[&quot;VM  &quot;+VM_Object.Name + &quot;  is already started or starting.&quot;]" />
                          </If.Else>
                        </If>
                        <If x:Key="stop" Condition="[VM_Object.State IsNot Amazon.EC2.InstanceStateName.ShuttingDown And  VM_Object.State IsNot Amazon.EC2.InstanceStateName.Stopped And  VM_Object.State IsNot Amazon.EC2.InstanceStateName.Stopping And  VM_Object.State IsNot Amazon.EC2.InstanceStateName.Terminated]" DisplayName="If not already stopped" sap:VirtualizedContainerService.HintSize="1172,768" sap2010:WorkflowViewState.IdRef="If_8">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <If.Then>
                            <Sequence sap:VirtualizedContainerService.HintSize="794.4,618.4" sap2010:WorkflowViewState.IdRef="Sequence_25">
                              <Sequence.Variables>
                                <Variable x:TypeArguments="x:Int32" Name="machineBusyRobotsCount" />
                              </Sequence.Variables>
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke OrchestratorTenant_MachineBusyRobots workflow" sap:VirtualizedContainerService.HintSize="752.8,88" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_2" UnSafe="False" WorkflowFileName="OrchestratorTenant_MachineBusyRobots.xaml">
                                <ui:InvokeWorkflowFile.Arguments>
                                  <InArgument x:TypeArguments="x:String" x:Key="Token">[Token]</InArgument>
                                  <InArgument x:TypeArguments="x:String" x:Key="TenantLogicalName">[TenantLogicalName]</InArgument>
                                  <InArgument x:TypeArguments="x:String" x:Key="TenantService">[TenantService]</InArgument>
                                  <InArgument x:TypeArguments="x:String" x:Key="Url">[Url]</InArgument>
                                  <InArgument x:TypeArguments="x:Boolean" x:Key="clientOrchestratorIsOnprem">[clientOrchestratorIsOnprem]</InArgument>
                                  <InArgument x:TypeArguments="x:String" x:Key="FolderId">[FolderId]</InArgument>
                                  <InArgument x:TypeArguments="x:Boolean" x:Key="clientEnvironmentLevelCounters">[clientEnvironmentLevelCounters]</InArgument>
                                  <InArgument x:TypeArguments="x:String" x:Key="MachineName">[VM_Object.Name]</InArgument>
                                  <OutArgument x:TypeArguments="x:Int32" x:Key="RobotsBusyCount">[machineBusyRobotsCount]</OutArgument>
                                </ui:InvokeWorkflowFile.Arguments>
                              </ui:InvokeWorkflowFile>
                              <If Condition="[machineBusyRobotsCount = 0]" sap:VirtualizedContainerService.HintSize="752.8,397.6" sap2010:WorkflowViewState.IdRef="If_9">
                                <If.Then>
                                  <Sequence sap:VirtualizedContainerService.HintSize="375.2,248" sap2010:WorkflowViewState.IdRef="Sequence_24">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <uaaei:AWSStopInstance Timeout="{x:Null}" DisplayName="Stop Instance" Force="False" Hibernate="False" sap:VirtualizedContainerService.HintSize="333.6,22.4" sap2010:WorkflowViewState.IdRef="AWSStopInstance_3" Instance="[VM_Object]" WaitForCompletion="False" />
                                    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="333.6,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_15" Level="Info" Message="[&quot;VM  &quot;+VM_Object.Name + &quot;  stopped.&quot;]" />
                                  </Sequence>
                                </If.Then>
                                <If.Else>
                                  <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="333.6,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_16" Level="Info" Message="[&quot;Skipped VM  &quot;+VM_Object.Name + &quot;  deallocation: machineBusyRobotsCount is now &gt; 0&quot;]" />
                                </If.Else>
                              </If>
                            </Sequence>
                          </If.Then>
                          <If.Else>
                            <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="333.6,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_14" Level="Info" Message="[&quot;VM  &quot;+VM_Object.Name + &quot;  is already stopped / stopping / shutting-down / terminated.&quot;]" />
                          </If.Else>
                        </If>
                      </Switch>
                    </TryCatch.Try>
                    <TryCatch.Catches>
                      <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="1215.2,22.4" sap2010:WorkflowViewState.IdRef="Catch`1_3">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ActivityAction x:TypeArguments="s:Exception">
                          <ActivityAction.Argument>
                            <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                          </ActivityAction.Argument>
                          <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="333.6,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_6" Level="Info" Message="[&quot;Failed to &quot; + Action_StartStopDeallocateDelete + &quot; VM &quot; + VM_Name]" />
                        </ActivityAction>
                      </Catch>
                    </TryCatch.Catches>
                  </TryCatch>
                </Sequence>
              </If.Then>
              <If.Else>
                <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="333.6,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_7" Level="Info" Message="[&quot;Failed to Get VM instance: &quot; + VM_Name]" />
              </If.Else>
            </If>
          </Sequence>
        </ActivityAction>
      </uaa:AWSScope.Body>
    </uaa:AWSScope>
  </Sequence>
</Activity>